import org.jetbrains.kotlin.gradle.tasks.KotlinCompile
import com.expediagroup.graphql.plugin.gradle.tasks.GraphQLIntrospectSchemaTask
import com.expediagroup.graphql.plugin.gradle.tasks.GraphQLGenerateClientTask

object projectVersions{
	const val graphQL = "5.3.1"
	const val graphQLClientEndpoint = "https://countries.trevorblades.com/graphql"
	const val graphQLClientPackage = "com.trevorblades.countries"
}

val graphqlIntrospectSchema by tasks.getting(GraphQLIntrospectSchemaTask::class) {
	endpoint.set(projectVersions.graphQLClientEndpoint)
}

val graphqlGenerateClient by tasks.getting(GraphQLGenerateClientTask::class) {
	packageName.set(projectVersions.graphQLClientPackage)
	// use schema file generated by the introspection task
	schemaFile.set(graphqlIntrospectSchema.outputFile)
	// make sure to run client generation after introspection task
	dependsOn("graphqlIntrospectSchema")
}

graphql {
	client {
		endpoint = projectVersions.graphQLClientEndpoint
		packageName = projectVersions.graphQLClientPackage
	}
}


plugins {
	id("org.springframework.boot") version "2.6.2"
	id("io.spring.dependency-management") version "1.0.11.RELEASE"
	id("com.expediagroup.graphql") version "5.3.1"

	kotlin("jvm") version "1.6.10"
	kotlin("plugin.spring") version "1.6.10"
}

group = "pt.jorgeduarte"
version = "0.0.1-SNAPSHOT"
java.sourceCompatibility = JavaVersion.VERSION_1_8

configurations {
	compileOnly {
		extendsFrom(configurations.annotationProcessor.get())
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation("com.expediagroup:graphql-kotlin-spring-client:${projectVersions.graphQL}")
	implementation("com.expediagroup:graphql-kotlin-schema-generator:${projectVersions.graphQL}")

	implementation("org.springframework.boot:spring-boot-starter-web")
	implementation("com.fasterxml.jackson.module:jackson-module-kotlin")
	implementation("org.jetbrains.kotlin:kotlin-reflect")
	implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
	compileOnly("org.projectlombok:lombok")
	annotationProcessor("org.projectlombok:lombok")
	testImplementation("org.springframework.boot:spring-boot-starter-test")


}

tasks.withType<KotlinCompile> {
	kotlinOptions {
		freeCompilerArgs = listOf("-Xjsr305=strict")
		jvmTarget = "1.8"
	}
}

tasks.withType<Test> {
	useJUnitPlatform()
}


